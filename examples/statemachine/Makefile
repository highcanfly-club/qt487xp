#############################################################################
# Makefile for building: statemachine
# Generated by qmake (2.01a) (Qt 4.8.7) on: mar. 5. sept. 16:05:05 2023
# Project:  statemachine.pro
# Template: subdirs
# Command: c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\qmake\qmake.exe -o Makefile statemachine.pro
#############################################################################

first: make_default
MAKEFILE      = Makefile
QMAKE         = c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\qmake\qmake.exe
DEL_FILE      = del
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
INSTALL_FILE  = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
DEL_FILE      = del
SYMLINK       = 
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
SUBTARGETS    =  \
		sub-factorial \
		sub-pingpong \
		sub-eventtransitions \
		sub-rogue \
		sub-trafficlight \
		sub-twowaybutton

factorial\$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) factorial\ $(MKDIR) factorial\ 
	cd factorial\ && $(QMAKE) c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\factorial\factorial.pro -o $(MAKEFILE)
sub-factorial-qmake_all:  FORCE
	@$(CHK_DIR_EXISTS) factorial\ $(MKDIR) factorial\ 
	cd factorial\ && $(QMAKE) c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\factorial\factorial.pro -o $(MAKEFILE)
sub-factorial: factorial\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd factorial\ && $(MAKE) -f $(MAKEFILE)
sub-factorial-make_default: factorial\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd factorial\ && $(MAKE) -f $(MAKEFILE) 
sub-factorial-make_first: factorial\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd factorial\ && $(MAKE) -f $(MAKEFILE) first
sub-factorial-all: factorial\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd factorial\ && $(MAKE) -f $(MAKEFILE) all
sub-factorial-clean: factorial\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd factorial\ && $(MAKE) -f $(MAKEFILE) clean
sub-factorial-distclean: factorial\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd factorial\ && $(MAKE) -f $(MAKEFILE) distclean
sub-factorial-install_subtargets: factorial\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd factorial\ && $(MAKE) -f $(MAKEFILE) install
sub-factorial-uninstall_subtargets: factorial\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd factorial\ && $(MAKE) -f $(MAKEFILE) uninstall
pingpong\$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) pingpong\ $(MKDIR) pingpong\ 
	cd pingpong\ && $(QMAKE) c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\pingpong\pingpong.pro -o $(MAKEFILE)
sub-pingpong-qmake_all:  FORCE
	@$(CHK_DIR_EXISTS) pingpong\ $(MKDIR) pingpong\ 
	cd pingpong\ && $(QMAKE) c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\pingpong\pingpong.pro -o $(MAKEFILE)
sub-pingpong: pingpong\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd pingpong\ && $(MAKE) -f $(MAKEFILE)
sub-pingpong-make_default: pingpong\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd pingpong\ && $(MAKE) -f $(MAKEFILE) 
sub-pingpong-make_first: pingpong\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd pingpong\ && $(MAKE) -f $(MAKEFILE) first
sub-pingpong-all: pingpong\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd pingpong\ && $(MAKE) -f $(MAKEFILE) all
sub-pingpong-clean: pingpong\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd pingpong\ && $(MAKE) -f $(MAKEFILE) clean
sub-pingpong-distclean: pingpong\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd pingpong\ && $(MAKE) -f $(MAKEFILE) distclean
sub-pingpong-install_subtargets: pingpong\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd pingpong\ && $(MAKE) -f $(MAKEFILE) install
sub-pingpong-uninstall_subtargets: pingpong\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd pingpong\ && $(MAKE) -f $(MAKEFILE) uninstall
eventtransitions\$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) eventtransitions\ $(MKDIR) eventtransitions\ 
	cd eventtransitions\ && $(QMAKE) c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\eventtransitions\eventtransitions.pro -o $(MAKEFILE)
sub-eventtransitions-qmake_all:  FORCE
	@$(CHK_DIR_EXISTS) eventtransitions\ $(MKDIR) eventtransitions\ 
	cd eventtransitions\ && $(QMAKE) c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\eventtransitions\eventtransitions.pro -o $(MAKEFILE)
sub-eventtransitions: eventtransitions\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd eventtransitions\ && $(MAKE) -f $(MAKEFILE)
sub-eventtransitions-make_default: eventtransitions\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd eventtransitions\ && $(MAKE) -f $(MAKEFILE) 
sub-eventtransitions-make_first: eventtransitions\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd eventtransitions\ && $(MAKE) -f $(MAKEFILE) first
sub-eventtransitions-all: eventtransitions\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd eventtransitions\ && $(MAKE) -f $(MAKEFILE) all
sub-eventtransitions-clean: eventtransitions\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd eventtransitions\ && $(MAKE) -f $(MAKEFILE) clean
sub-eventtransitions-distclean: eventtransitions\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd eventtransitions\ && $(MAKE) -f $(MAKEFILE) distclean
sub-eventtransitions-install_subtargets: eventtransitions\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd eventtransitions\ && $(MAKE) -f $(MAKEFILE) install
sub-eventtransitions-uninstall_subtargets: eventtransitions\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd eventtransitions\ && $(MAKE) -f $(MAKEFILE) uninstall
rogue\$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) rogue\ $(MKDIR) rogue\ 
	cd rogue\ && $(QMAKE) c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\rogue\rogue.pro -o $(MAKEFILE)
sub-rogue-qmake_all:  FORCE
	@$(CHK_DIR_EXISTS) rogue\ $(MKDIR) rogue\ 
	cd rogue\ && $(QMAKE) c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\rogue\rogue.pro -o $(MAKEFILE)
sub-rogue: rogue\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd rogue\ && $(MAKE) -f $(MAKEFILE)
sub-rogue-make_default: rogue\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd rogue\ && $(MAKE) -f $(MAKEFILE) 
sub-rogue-make_first: rogue\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd rogue\ && $(MAKE) -f $(MAKEFILE) first
sub-rogue-all: rogue\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd rogue\ && $(MAKE) -f $(MAKEFILE) all
sub-rogue-clean: rogue\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd rogue\ && $(MAKE) -f $(MAKEFILE) clean
sub-rogue-distclean: rogue\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd rogue\ && $(MAKE) -f $(MAKEFILE) distclean
sub-rogue-install_subtargets: rogue\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd rogue\ && $(MAKE) -f $(MAKEFILE) install
sub-rogue-uninstall_subtargets: rogue\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd rogue\ && $(MAKE) -f $(MAKEFILE) uninstall
trafficlight\$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) trafficlight\ $(MKDIR) trafficlight\ 
	cd trafficlight\ && $(QMAKE) c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\trafficlight\trafficlight.pro -o $(MAKEFILE)
sub-trafficlight-qmake_all:  FORCE
	@$(CHK_DIR_EXISTS) trafficlight\ $(MKDIR) trafficlight\ 
	cd trafficlight\ && $(QMAKE) c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\trafficlight\trafficlight.pro -o $(MAKEFILE)
sub-trafficlight: trafficlight\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd trafficlight\ && $(MAKE) -f $(MAKEFILE)
sub-trafficlight-make_default: trafficlight\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd trafficlight\ && $(MAKE) -f $(MAKEFILE) 
sub-trafficlight-make_first: trafficlight\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd trafficlight\ && $(MAKE) -f $(MAKEFILE) first
sub-trafficlight-all: trafficlight\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd trafficlight\ && $(MAKE) -f $(MAKEFILE) all
sub-trafficlight-clean: trafficlight\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd trafficlight\ && $(MAKE) -f $(MAKEFILE) clean
sub-trafficlight-distclean: trafficlight\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd trafficlight\ && $(MAKE) -f $(MAKEFILE) distclean
sub-trafficlight-install_subtargets: trafficlight\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd trafficlight\ && $(MAKE) -f $(MAKEFILE) install
sub-trafficlight-uninstall_subtargets: trafficlight\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd trafficlight\ && $(MAKE) -f $(MAKEFILE) uninstall
twowaybutton\$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) twowaybutton\ $(MKDIR) twowaybutton\ 
	cd twowaybutton\ && $(QMAKE) c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\twowaybutton\twowaybutton.pro -o $(MAKEFILE)
sub-twowaybutton-qmake_all:  FORCE
	@$(CHK_DIR_EXISTS) twowaybutton\ $(MKDIR) twowaybutton\ 
	cd twowaybutton\ && $(QMAKE) c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\twowaybutton\twowaybutton.pro -o $(MAKEFILE)
sub-twowaybutton: twowaybutton\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd twowaybutton\ && $(MAKE) -f $(MAKEFILE)
sub-twowaybutton-make_default: twowaybutton\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd twowaybutton\ && $(MAKE) -f $(MAKEFILE) 
sub-twowaybutton-make_first: twowaybutton\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd twowaybutton\ && $(MAKE) -f $(MAKEFILE) first
sub-twowaybutton-all: twowaybutton\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd twowaybutton\ && $(MAKE) -f $(MAKEFILE) all
sub-twowaybutton-clean: twowaybutton\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd twowaybutton\ && $(MAKE) -f $(MAKEFILE) clean
sub-twowaybutton-distclean: twowaybutton\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd twowaybutton\ && $(MAKE) -f $(MAKEFILE) distclean
sub-twowaybutton-install_subtargets: twowaybutton\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd twowaybutton\ && $(MAKE) -f $(MAKEFILE) install
sub-twowaybutton-uninstall_subtargets: twowaybutton\$(MAKEFILE) FORCE
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd twowaybutton\ && $(MAKE) -f $(MAKEFILE) uninstall

Makefile: statemachine.pro ..\..\.qmake.cache ..\..\mkspecs\win32-msvc2017\qmake.conf ..\..\mkspecs\features\exclusive_builds.prf \
		..\..\mkspecs\features\default_pre.prf \
		..\..\mkspecs\features\win32\default_pre.prf \
		..\..\.qmake.cache \
		..\..\mkspecs\qconfig.pri \
		..\..\mkspecs\features\qt_functions.prf \
		..\..\mkspecs\features\qt_config.prf \
		..\..\mkspecs\features\release.prf \
		..\..\mkspecs\features\debug_and_release.prf \
		..\..\mkspecs\features\default_post.prf \
		..\..\mkspecs\features\win32\default_post.prf \
		..\..\mkspecs\features\win32\rtti.prf \
		..\..\mkspecs\features\win32\exceptions.prf \
		..\..\mkspecs\features\win32\stl.prf \
		..\..\mkspecs\features\shared.prf \
		..\..\mkspecs\features\win32\embed_manifest_exe.prf \
		..\..\mkspecs\features\win32\embed_manifest_dll.prf \
		..\..\mkspecs\features\warn_on.prf \
		..\..\mkspecs\features\qt.prf \
		..\..\mkspecs\features\win32\thread.prf \
		..\..\mkspecs\features\moc.prf \
		..\..\mkspecs\features\win32\windows.prf \
		..\..\mkspecs\features\resources.prf \
		..\..\mkspecs\features\uic.prf \
		..\..\mkspecs\features\yacc.prf \
		..\..\mkspecs\features\lex.prf \
		..\..\mkspecs\features\include_source_dir.prf
	$(QMAKE) -o Makefile statemachine.pro
..\..\mkspecs\features\exclusive_builds.prf:
..\..\mkspecs\features\default_pre.prf:
..\..\mkspecs\features\win32\default_pre.prf:
..\..\.qmake.cache:
..\..\mkspecs\qconfig.pri:
..\..\mkspecs\features\qt_functions.prf:
..\..\mkspecs\features\qt_config.prf:
..\..\mkspecs\features\release.prf:
..\..\mkspecs\features\debug_and_release.prf:
..\..\mkspecs\features\default_post.prf:
..\..\mkspecs\features\win32\default_post.prf:
..\..\mkspecs\features\win32\rtti.prf:
..\..\mkspecs\features\win32\exceptions.prf:
..\..\mkspecs\features\win32\stl.prf:
..\..\mkspecs\features\shared.prf:
..\..\mkspecs\features\win32\embed_manifest_exe.prf:
..\..\mkspecs\features\win32\embed_manifest_dll.prf:
..\..\mkspecs\features\warn_on.prf:
..\..\mkspecs\features\qt.prf:
..\..\mkspecs\features\win32\thread.prf:
..\..\mkspecs\features\moc.prf:
..\..\mkspecs\features\win32\windows.prf:
..\..\mkspecs\features\resources.prf:
..\..\mkspecs\features\uic.prf:
..\..\mkspecs\features\yacc.prf:
..\..\mkspecs\features\lex.prf:
..\..\mkspecs\features\include_source_dir.prf:
qmake: qmake_all FORCE
	@$(QMAKE) -o Makefile statemachine.pro

qmake_all: sub-factorial-qmake_all sub-pingpong-qmake_all sub-eventtransitions-qmake_all sub-rogue-qmake_all sub-trafficlight-qmake_all sub-twowaybutton-qmake_all FORCE

make_default: sub-factorial-make_default sub-pingpong-make_default sub-eventtransitions-make_default sub-rogue-make_default sub-trafficlight-make_default sub-twowaybutton-make_default FORCE
make_first: sub-factorial-make_first sub-pingpong-make_first sub-eventtransitions-make_first sub-rogue-make_first sub-trafficlight-make_first sub-twowaybutton-make_first FORCE
all: sub-factorial-all sub-pingpong-all sub-eventtransitions-all sub-rogue-all sub-trafficlight-all sub-twowaybutton-all FORCE
clean: sub-factorial-clean sub-pingpong-clean sub-eventtransitions-clean sub-rogue-clean sub-trafficlight-clean sub-twowaybutton-clean FORCE
distclean: sub-factorial-distclean sub-pingpong-distclean sub-eventtransitions-distclean sub-rogue-distclean sub-trafficlight-distclean sub-twowaybutton-distclean FORCE
	-$(DEL_FILE) Makefile
install_subtargets: sub-factorial-install_subtargets sub-pingpong-install_subtargets sub-eventtransitions-install_subtargets sub-rogue-install_subtargets sub-trafficlight-install_subtargets sub-twowaybutton-install_subtargets FORCE
uninstall_subtargets: sub-factorial-uninstall_subtargets sub-pingpong-uninstall_subtargets sub-eventtransitions-uninstall_subtargets sub-rogue-uninstall_subtargets sub-trafficlight-uninstall_subtargets sub-twowaybutton-uninstall_subtargets FORCE

sub-factorial-sub_Debug: factorial\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd factorial\ && $(MAKE) -f $(MAKEFILE) debug
sub-pingpong-sub_Debug: pingpong\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd pingpong\ && $(MAKE) -f $(MAKEFILE) debug
sub-eventtransitions-sub_Debug: eventtransitions\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd eventtransitions\ && $(MAKE) -f $(MAKEFILE) debug
sub-rogue-sub_Debug: rogue\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd rogue\ && $(MAKE) -f $(MAKEFILE) debug
sub-trafficlight-sub_Debug: trafficlight\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd trafficlight\ && $(MAKE) -f $(MAKEFILE) debug
sub-twowaybutton-sub_Debug: twowaybutton\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd twowaybutton\ && $(MAKE) -f $(MAKEFILE) debug
debug: sub-factorial-sub_Debug sub-pingpong-sub_Debug sub-eventtransitions-sub_Debug sub-rogue-sub_Debug sub-trafficlight-sub_Debug sub-twowaybutton-sub_Debug

sub-factorial-sub_Release: factorial\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd factorial\ && $(MAKE) -f $(MAKEFILE) release
sub-pingpong-sub_Release: pingpong\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd pingpong\ && $(MAKE) -f $(MAKEFILE) release
sub-eventtransitions-sub_Release: eventtransitions\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd eventtransitions\ && $(MAKE) -f $(MAKEFILE) release
sub-rogue-sub_Release: rogue\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd rogue\ && $(MAKE) -f $(MAKEFILE) release
sub-trafficlight-sub_Release: trafficlight\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd trafficlight\ && $(MAKE) -f $(MAKEFILE) release
sub-twowaybutton-sub_Release: twowaybutton\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd twowaybutton\ && $(MAKE) -f $(MAKEFILE) release
release: sub-factorial-sub_Release sub-pingpong-sub_Release sub-eventtransitions-sub_Release sub-rogue-sub_Release sub-trafficlight-sub_Release sub-twowaybutton-sub_Release

sub-factorial-check: factorial\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd factorial\ && $(MAKE) -f $(MAKEFILE) check
sub-pingpong-check: pingpong\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd pingpong\ && $(MAKE) -f $(MAKEFILE) check
sub-eventtransitions-check: eventtransitions\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd eventtransitions\ && $(MAKE) -f $(MAKEFILE) check
sub-rogue-check: rogue\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd rogue\ && $(MAKE) -f $(MAKEFILE) check
sub-trafficlight-check: trafficlight\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd trafficlight\ && $(MAKE) -f $(MAKEFILE) check
sub-twowaybutton-check: twowaybutton\$(MAKEFILE)
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd twowaybutton\ && $(MAKE) -f $(MAKEFILE) check
check: sub-factorial-check sub-pingpong-check sub-eventtransitions-check sub-rogue-check sub-trafficlight-check sub-twowaybutton-check

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all
install_sources: FORCE
	@$(CHK_DIR_EXISTS) c:$(INSTALL_ROOT)\Users\rlemeill\source\repos\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine $(MKDIR) c:$(INSTALL_ROOT)\Users\rlemeill\source\repos\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine 
	-$(INSTALL_FILE) c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\statemachine.pro c:$(INSTALL_ROOT)\Users\rlemeill\source\repos\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine
	-$(INSTALL_FILE) c:\Users\dev\source\repos\eltorio\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\README c:$(INSTALL_ROOT)\Users\rlemeill\source\repos\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine


uninstall_sources:  FORCE
	-$(DEL_FILE) c:$(INSTALL_ROOT)\Users\rlemeill\source\repos\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\statemachine.pro 
	 -$(DEL_FILE) c:$(INSTALL_ROOT)\Users\rlemeill\source\repos\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine\README
	-$(DEL_DIR) c:$(INSTALL_ROOT)\Users\rlemeill\source\repos\novasulf-II\qt-everywhere-opensource-src-4.8.7\examples\statemachine 


install: install_subtargets install_sources  FORCE

uninstall: uninstall_sources  uninstall_subtargets FORCE

FORCE:

